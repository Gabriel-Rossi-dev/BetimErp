unit Betim.View.CadastroUsuario;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.WinXPanels, Vcl.ExtCtrls, Data.DB,
  Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, System.ImageList, Vcl.ImgList,
  Data.FMTBcd, Data.SqlExpr, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TFrmCadUsuario = class(TForm)
    CardPrincipal: TCardPanel;
    CardCadastro: TCard;
    CardPesquisa: TCard;
    pnlPesquisa: TPanel;
    pnlBotoesPesquisa: TPanel;
    pnlGrid: TPanel;
    gridCadUsuario: TDBGrid;
    EditPesquisar: TEdit;
    lblPesquisar: TLabel;
    btnPesquisar: TButton;
    ImageList1: TImageList;
    btnFecharPesquisa: TButton;
    btnSalvarPesquisa: TButton;
    btnEditarPesquisa: TButton;
    Panel1: TPanel;
    btnFecharCadastro: TButton;
    btnSalvarCadastro: TButton;
    btnEditarCadastro: TButton;
    btnImprimirPesquisa: TButton;
    dsUsuarios: TDataSource;
    editName: TEdit;
    lblUsuario: TLabel;
    Label1: TLabel;
    EditLogin: TEdit;
    Label2: TLabel;
    EditSenha: TEdit;
    editId: TEdit;
    lblId: TLabel;
    qryNovoUsuario: TFDQuery;
    chkAtivo: TCheckBox;
    qryInsert: TFDQuery;
    procedure btnFecharPesquisaClick(Sender: TObject);
    procedure btnIncluirPesquisaClick(Sender: TObject);
    procedure btnFecharCadastroClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure gridCadUsuarioDblClick(Sender: TObject);
    procedure btnEditarPesquisaClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
    procedure  chamaqrygrid();
    procedure LimpaCampos();
    procedure EditPesquisarKeyPress(Sender: TObject; var Key: Char);
    procedure btnSalvarCadastroClick(Sender: TObject);
  private
    { Private declarations }
    var newId:Integer;
  public
    { Public declarations }
    var status: String;
  end;

var
  FrmCadUsuario: TFrmCadUsuario;

implementation

uses
  UdmConexao, Betim.Model.CadastroUsuario;

{$R *.dfm}

procedure TFrmCadUsuario.btnEditarPesquisaClick(Sender: TObject);
begin


  if dmUsuarios.cdsUsuariosSTATUS.asInteger = 1 then
    chkAtivo.Checked := True
  else
    chkAtivo.Checked := False;
  editID.Text   := dmUsuarios.cdsUsuariosID.asString;
  editName.Text   := dmUsuarios.cdsUsuariosNOME.asString;
  EditLogin.Text  := dmUsuarios.cdsUsuariosLOGIN.asString;
  EditSenha.Text  := dmUsuarios.cdsUsuariosSENHA.asString;
  dmUsuarios.cdsUsuarios.Edit;
  CardPrincipal.ActiveCard :=  CardCadastro;

end;

procedure TFrmCadUsuario.btnFecharCadastroClick(Sender: TObject);
begin
  case Application.MessageBox('Tem certeza que quer cancelar o cadastro ?','Cancelar',MB_ICONQUESTION + MB_YESNO ) of
    mrYes:
    begin
     CardPrincipal.ActiveCard :=  CardPesquisa;
     LimpaCampos;
     dmUsuarios.cdsUsuarios.Cancel;
    end;
  end;


end;

procedure TFrmCadUsuario.btnFecharPesquisaClick(Sender: TObject);
begin
  FrmCadUsuario.Close;
end;

procedure TFrmCadUsuario.btnPesquisarClick(Sender: TObject);
begin
  chamaQryGrid();
end;

procedure TFrmCadUsuario.btnSalvarCadastroClick(Sender: TObject);
begin

  if dmUsuarios.cdsUsuarios.State in [dsEdit] then
  begin
    dmUsuarios.cdsUsuarios.Edit;

    if editName.Text = '' then
    begin
      Application.MessageBox('O campo nome não pode estar vazio','Atenção',MB_OK + MB_ICONWARNING);
      abort;
    end;
      if EditLogin.Text = '' then
    begin
      Application.MessageBox('O campo login não pode estar vazio','Atenção',MB_OK + MB_ICONWARNING);
      abort;
    end;
      if EditSenha.Text = '' then
    begin
      Application.MessageBox('O campo senha não pode estar vazio','Atenção',MB_OK + MB_ICONWARNING);
      abort;
    end;


    if chkAtivo.Checked then
      status := '1'
    else
      status := '2';

    dmUsuarios.cdsUsuariosNOME.asString    := editName.Text;
    dmUsuarios.cdsUsuariosLOGIN.asString   := EditLogin.Text;
    dmUsuarios.cdsUsuariosSENHA.asString   := EditSenha.Text;
    dmUsuarios.cdsUsuariosSTATUS.asString  := status ;

    dmUsuarios.cdsUsuarios.Post;
    dmUsuarios.cdsUsuarios.ApplyUpdates(0);
  end
  else if dmUsuarios.cdsUsuarios.State in [dsInsert] then
  begin
    if chkAtivo.Checked then
      status := '1'
    else
      status := '2';

    dmUsuarios.cdsUsuarios.Close;
    dmUsuarios.cdsUsuarios.Insert;

    dmUsuarios.cdsUsuariosID.AsString         := editId.text;
    dmUsuarios.cdsUsuariosNOME.AsString       := editName.Text;
    dmUsuarios.cdsUsuariosLOGIN.AsString      := EditLogin.Text;
    dmUsuarios.cdsUsuariosSENHA.AsString      := EditSenha.Text;
    dmUsuarios.cdsUsuariosSTATUS.AsString     := status;

    dmUsuarios.cdsUsuarios.Post;
    dmUsuarios.cdsUsuarios.ApplyUpdates(0);
  end;




  dmUsuarios.cdsUsuarios.Post;
  dmUsuarios.cdsUsuarios.ApplyUpdates(0);
  Application.MessageBox('Registro Alterado com sucesso','Atenção',MB_OK + MB_ICONINFORMATION);
  LimpaCampos;
  CardPrincipal.ActiveCard :=  CardPesquisa;
end;

procedure TFrmCadUsuario.btnIncluirPesquisaClick(Sender: TObject);
begin
  qryNovoUsuario.SQL.Text  := 'SELECT MAX(ID) MAX_ID FROM USUARIOS';
  qryNovoUsuario.Open();
  newId := qryNovoUsuario.FieldByName('MAX_ID').AsInteger;
  editId.Text := IntToStr(newId + 1);
  dmUsuarios.cdsUsuarios.Insert;
  CardPrincipal.ActiveCard :=  CardCadastro;
end;

procedure TFrmCadUsuario.chamaqrygrid;
begin
  dmUsuarios.cdsUsuarios.Close;

    if EditPesquisar.text = '' then
  begin
  dmUsuarios.cdsUsuarios.CommandText := 'SELECT ID,NOME,LOGIN,SENHA,STATUS FROM USUARIOS';
  dmUsuarios.cdsUsuarios.Open;
  end
  else
  begin
    dmUsuarios.cdsUsuarios.CommandText  := 'SELECT ID,NOME,LOGIN,SENHA,STATUS FROM USUARIOS WHERE NOME LIKE UPPER('+ QuotedStr(EditPesquisar.text)+')';
    dmUsuarios.cdsUsuarios.Open;
    if dmUsuarios.cdsUsuarios.RecordCount <= 0 then
    begin
      ShowMessage('Não foi possível encontrar nenhum usuário com esse nome')
    end;
  end;

end;



procedure TFrmCadUsuario.EditPesquisarKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    chamaQryGrid();
end;

procedure TFrmCadUsuario.FormActivate(Sender: TObject);
begin
  CardPrincipal.ActiveCard :=  CardPesquisa;
end;


procedure TFrmCadUsuario.gridCadUsuarioDblClick(Sender: TObject);
begin
  CardPrincipal.ActiveCard :=  CardCadastro;
end;

procedure TFrmCadUsuario.LimpaCampos;
var Contador:Integer;
begin
  for Contador := 0 to Pred(ComponentCount) do
  begin
    if Components[Contador] is TCustomEdit then
      TCustomEdit(Components[Contador]).Clear
    else if Components[Contador] is TCheckBox then
      TCheckBox(Components[Contador]).Checked := False;
  end;


end;

end.
